{"ast":null,"code":"var _jsxFileName = \"/home/maya/Documents/Weekly-Plannr/src/screens/MealPlanner.js\",\n  _s = $RefreshSig$();\n// WeekMealPlanner.js\nimport React, { useState } from 'react';\nimport TableContainer from '@mui/material/TableContainer';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\n// import pdfDocument from '../data/Meal_Planner.pdf'; // Adjust the path accordingly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mealIdeas = {\n  breakfast: ['Oatmeal with fruits', 'Scrambled eggs with toast', 'Greek yogurt with granola and berries', 'Avocado toast with poached egg', 'Smoothie with spinach, banana, and almond milk', 'Pancakes with maple syrup', 'Fruit salad', 'Whole grain cereal with milk', 'Bagel with cream cheese and smoked salmon'],\n  lunch: ['Grilled chicken salad', 'Vegetarian stir-fry', 'Quinoa bowl with roasted vegetables', 'Turkey and avocado wrap', 'Caprese sandwich', 'Chickpea curry', 'Pasta with tomato sauce', 'Caesar salad with grilled shrimp'],\n  dinner: ['Salmon with lemon dill sauce', 'Spaghetti Bolognese', 'Vegetarian lasagna', 'Teriyaki chicken with broccoli', 'Mushroom risotto', 'Tacos with salsa and guacamole', 'Baked ziti', 'Grilled steak with mashed potatoes']\n};\nconst WeekMealPlanner = () => {\n  _s();\n  const [mealPlan, setMealPlan] = useState({\n    Monday: {\n      breakfast: '',\n      lunch: '',\n      dinner: ''\n    },\n    Tuesday: {\n      breakfast: '',\n      lunch: '',\n      dinner: ''\n    },\n    Wednesday: {\n      breakfast: '',\n      lunch: '',\n      dinner: ''\n    },\n    Thursday: {\n      breakfast: '',\n      lunch: '',\n      dinner: ''\n    },\n    Friday: {\n      breakfast: '',\n      lunch: '',\n      dinner: ''\n    },\n    Saturday: {\n      breakfast: '',\n      lunch: '',\n      dinner: ''\n    },\n    Sunday: {\n      breakfast: '',\n      lunch: '',\n      dinner: ''\n    }\n  });\n  const clearTable = () => {\n    setMealPlan({\n      Monday: {\n        breakfast: '',\n        lunch: '',\n        dinner: ''\n      },\n      Tuesday: {\n        breakfast: '',\n        lunch: '',\n        dinner: ''\n      },\n      Wednesday: {\n        breakfast: '',\n        lunch: '',\n        dinner: ''\n      },\n      Thursday: {\n        breakfast: '',\n        lunch: '',\n        dinner: ''\n      },\n      Friday: {\n        breakfast: '',\n        lunch: '',\n        dinner: ''\n      },\n      Saturday: {\n        breakfast: '',\n        lunch: '',\n        dinner: ''\n      },\n      Sunday: {\n        breakfast: '',\n        lunch: '',\n        dinner: ''\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Breakfast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Dinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: Object.keys(mealPlan).map(day => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), ['breakfast', 'lunch', 'dinner'].map(mealType => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                value: mealPlan[day][mealType],\n                onChange: (_, newValue) => setMealPlan(prevMealPlan => ({\n                  ...prevMealPlan,\n                  [day]: {\n                    ...prevMealPlan[day],\n                    [mealType]: newValue || '' // Handle clearing the selection\n                  }\n                })),\n                options: mealIdeas[mealType],\n                freeSolo: true,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  ...params,\n                  label: `Select ${mealType.charAt(0).toUpperCase() + mealType.slice(1)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)\n            }, `${day}-${mealType}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this))]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: clearTable,\n      children: \"Clear Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(WeekMealPlanner, \"41Io/zbswuuZlJ1GF/M6OEm6pbU=\");\n_c = WeekMealPlanner;\nexport default WeekMealPlanner;\nvar _c;\n$RefreshReg$(_c, \"WeekMealPlanner\");","map":{"version":3,"names":["React","useState","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Button","TextField","Autocomplete","jsxDEV","_jsxDEV","mealIdeas","breakfast","lunch","dinner","WeekMealPlanner","_s","mealPlan","setMealPlan","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","clearTable","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","day","mealType","value","onChange","_","newValue","prevMealPlan","options","freeSolo","renderInput","params","label","charAt","toUpperCase","slice","variant","color","onClick","_c","$RefreshReg$"],"sources":["/home/maya/Documents/Weekly-Plannr/src/screens/MealPlanner.js"],"sourcesContent":["// WeekMealPlanner.js\nimport React, { useState } from 'react';\nimport TableContainer from '@mui/material/TableContainer';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\n// import pdfDocument from '../data/Meal_Planner.pdf'; // Adjust the path accordingly\nconst mealIdeas = {\n  breakfast: [\n    'Oatmeal with fruits',\n    'Scrambled eggs with toast',\n    'Greek yogurt with granola and berries',\n    'Avocado toast with poached egg',\n    'Smoothie with spinach, banana, and almond milk',\n    'Pancakes with maple syrup',\n    'Fruit salad',\n    'Whole grain cereal with milk',\n    'Bagel with cream cheese and smoked salmon',\n  ],\n  lunch: [\n    'Grilled chicken salad',\n    'Vegetarian stir-fry',\n    'Quinoa bowl with roasted vegetables',\n    'Turkey and avocado wrap',\n    'Caprese sandwich',\n    'Chickpea curry',\n    'Pasta with tomato sauce',\n    'Caesar salad with grilled shrimp',\n  ],\n  dinner: [\n    'Salmon with lemon dill sauce',\n    'Spaghetti Bolognese',\n    'Vegetarian lasagna',\n    'Teriyaki chicken with broccoli',\n    'Mushroom risotto',\n    'Tacos with salsa and guacamole',\n    'Baked ziti',\n    'Grilled steak with mashed potatoes',\n  ],\n};\n\nconst WeekMealPlanner = () => {\n  const [mealPlan, setMealPlan] = useState({\n    Monday: { breakfast: '', lunch: '', dinner: '' },\n    Tuesday: { breakfast: '', lunch: '', dinner: '' },\n    Wednesday: { breakfast: '', lunch: '', dinner: '' },\n    Thursday: { breakfast: '', lunch: '', dinner: '' },\n    Friday: { breakfast: '', lunch: '', dinner: '' },\n    Saturday: { breakfast: '', lunch: '', dinner: '' },\n    Sunday: { breakfast: '', lunch: '', dinner: '' },\n  });\n\n  const clearTable = () => {\n    setMealPlan({\n      Monday: { breakfast: '', lunch: '', dinner: '' },\n      Tuesday: { breakfast: '', lunch: '', dinner: '' },\n      Wednesday: { breakfast: '', lunch: '', dinner: '' },\n      Thursday: { breakfast: '', lunch: '', dinner: '' },\n      Friday: { breakfast: '', lunch: '', dinner: '' },\n      Saturday: { breakfast: '', lunch: '', dinner: '' },\n      Sunday: { breakfast: '', lunch: '', dinner: '' },\n    });\n  };\n\n  return (\n    <div>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Day</TableCell>\n              <TableCell>Breakfast</TableCell>\n              <TableCell>Lunch</TableCell>\n              <TableCell>Dinner</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Object.keys(mealPlan).map((day) => (\n              <TableRow key={day}>\n                <TableCell>{day}</TableCell>\n                {['breakfast', 'lunch', 'dinner'].map((mealType) => (\n                  <TableCell key={`${day}-${mealType}`}>\n                    <Autocomplete\n                      value={mealPlan[day][mealType]}\n                      onChange={(_, newValue) => setMealPlan((prevMealPlan) => ({\n                        ...prevMealPlan,\n                        [day]: {\n                          ...prevMealPlan[day],\n                          [mealType]: newValue || '', // Handle clearing the selection\n                        },\n                      }))}\n                      options={mealIdeas[mealType]}\n                      freeSolo\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label={`Select ${mealType.charAt(0).toUpperCase() + mealType.slice(1)}`}\n                        />\n                      )}\n                    />\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Button variant=\"outlined\" color=\"primary\" onClick={clearTable}>\n        Clear Table\n      </Button>\n\n      {/* <div style={{ marginTop: '20px' }}>\n        <h2>PDF Viewer</h2>\n        <embed src={pdfDocument} type=\"application/pdf\" width=\"100%\" height=\"600px\" />\n      </div> */}\n    </div>\n  );\n};\n\nexport default WeekMealPlanner;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG;EAChBC,SAAS,EAAE,CACT,qBAAqB,EACrB,2BAA2B,EAC3B,uCAAuC,EACvC,gCAAgC,EAChC,gDAAgD,EAChD,2BAA2B,EAC3B,aAAa,EACb,8BAA8B,EAC9B,2CAA2C,CAC5C;EACDC,KAAK,EAAE,CACL,uBAAuB,EACvB,qBAAqB,EACrB,qCAAqC,EACrC,yBAAyB,EACzB,kBAAkB,EAClB,gBAAgB,EAChB,yBAAyB,EACzB,kCAAkC,CACnC;EACDC,MAAM,EAAE,CACN,8BAA8B,EAC9B,qBAAqB,EACrB,oBAAoB,EACpB,gCAAgC,EAChC,kBAAkB,EAClB,gCAAgC,EAChC,YAAY,EACZ,oCAAoC;AAExC,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC;IACvCoB,MAAM,EAAE;MAAEP,SAAS,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC;IAChDM,OAAO,EAAE;MAAER,SAAS,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC;IACjDO,SAAS,EAAE;MAAET,SAAS,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC;IACnDQ,QAAQ,EAAE;MAAEV,SAAS,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC;IAClDS,MAAM,EAAE;MAAEX,SAAS,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC;IAChDU,QAAQ,EAAE;MAAEZ,SAAS,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC;IAClDW,MAAM,EAAE;MAAEb,SAAS,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG;EACjD,CAAC,CAAC;EAEF,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvBR,WAAW,CAAC;MACVC,MAAM,EAAE;QAAEP,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAChDM,OAAO,EAAE;QAAER,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MACjDO,SAAS,EAAE;QAAET,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MACnDQ,QAAQ,EAAE;QAAEV,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAClDS,MAAM,EAAE;QAAEX,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAChDU,QAAQ,EAAE;QAAEZ,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;MAClDW,MAAM,EAAE;QAAEb,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG;IACjD,CAAC,CAAC;EACJ,CAAC;EAED,oBACEJ,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACV,cAAc;MAAA2B,QAAA,eACbjB,OAAA,CAACT,KAAK;QAAA0B,QAAA,gBACJjB,OAAA,CAACR,SAAS;UAAAyB,QAAA,eACRjB,OAAA,CAACP,QAAQ;YAAAwB,QAAA,gBACPjB,OAAA,CAACN,SAAS;cAAAuB,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC1BrB,OAAA,CAACN,SAAS;cAAAuB,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAChCrB,OAAA,CAACN,SAAS;cAAAuB,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC5BrB,OAAA,CAACN,SAAS;cAAAuB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZrB,OAAA,CAACL,SAAS;UAAAsB,QAAA,EACPK,MAAM,CAACC,IAAI,CAAChB,QAAQ,CAAC,CAACiB,GAAG,CAAEC,GAAG,iBAC7BzB,OAAA,CAACP,QAAQ;YAAAwB,QAAA,gBACPjB,OAAA,CAACN,SAAS;cAAAuB,QAAA,EAAEQ;YAAG;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EAC3B,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,CAACG,GAAG,CAAEE,QAAQ,iBAC7C1B,OAAA,CAACN,SAAS;cAAAuB,QAAA,eACRjB,OAAA,CAACF,YAAY;gBACX6B,KAAK,EAAEpB,QAAQ,CAACkB,GAAG,CAAC,CAACC,QAAQ,CAAE;gBAC/BE,QAAQ,EAAEA,CAACC,CAAC,EAAEC,QAAQ,KAAKtB,WAAW,CAAEuB,YAAY,KAAM;kBACxD,GAAGA,YAAY;kBACf,CAACN,GAAG,GAAG;oBACL,GAAGM,YAAY,CAACN,GAAG,CAAC;oBACpB,CAACC,QAAQ,GAAGI,QAAQ,IAAI,EAAE,CAAE;kBAC9B;gBACF,CAAC,CAAC,CAAE;gBACJE,OAAO,EAAE/B,SAAS,CAACyB,QAAQ,CAAE;gBAC7BO,QAAQ;gBACRC,WAAW,EAAGC,MAAM,iBAClBnC,OAAA,CAACH,SAAS;kBAAA,GACJsC,MAAM;kBACVC,KAAK,EAAG,UAASV,QAAQ,CAACW,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGZ,QAAQ,CAACa,KAAK,CAAC,CAAC,CAAE;gBAAE;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzE;cACD;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GAlBa,GAAEI,GAAI,IAAGC,QAAS,EAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAmBzB,CACZ,CAAC;UAAA,GAvBWI,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwBR,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eAEjBrB,OAAA,CAACJ,MAAM;MAAC4C,OAAO,EAAC,UAAU;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAE1B,UAAW;MAAAC,QAAA,EAAC;IAEhE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMN,CAAC;AAEV,CAAC;AAACf,EAAA,CA7EID,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AA+ErB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}